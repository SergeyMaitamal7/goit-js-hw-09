{"mappings":"AA2BA,SAASA,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,EArCA,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAaC,OAAOH,EAAMI,cAAchB,MAAMiB,OAC9CC,EAAOH,OAAOH,EAAMI,cAAcE,KAAKD,OACvCE,EAASJ,OAAOH,EAAMI,cAAcG,OAAOF,OAEjD,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAGnCtB,EAAc,CAACsB,GAFDN,EAAaI,EAAO,CAACE,IAGhCC,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,QAAQC,IAAI,uBAAqBH,QAAUpB,MAAU,IAEtDwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBsB,QAAQC,IAAI,sBAAoBH,QAAUpB,MAAU,G,CAG1DY,EAAMI,cAAcS,O","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', buttonSubmit);\n\nfunction buttonSubmit(event) {\n  event.preventDefault();\n\n  const firstDelay = Number(event.currentTarget.delay.value);\n  const step = Number(event.currentTarget.step.value);\n  const amount = Number(event.currentTarget.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    const delay = firstDelay + step * [i];\n\n    createPromise([i], delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${i} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${i} in ${delay}ms`);\n      });\n  }\n  event.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// Напиши скрипт, который при сабмите формы вызывает\n// функцию createPromise(position, delay) столько раз,\n// сколько ввели в поле amount. При каждом вызове передай ей номер\n// создаваемого промиса (position) и задержку учитывая введенную пользователем\n// первую задержку (delay) и шаг (step).\n\n// Дополни код функции createPromise так, чтобы она возвращала один промис,\n//  который выполянется или отклоняется через delay времени. Значением промиса\n//  должен быть объект, в котором будут свойства position и delay со значениями\n//  одноименных параметров. Используй начальный код функции для выбора того, что\n//   нужно сделать с промисом - выполнить или отклонить.\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","form","document","querySelector","addEventListener","event","preventDefault","firstDelay","Number","currentTarget","value","step","amount","i","then","console","log","catch","reset"],"version":3,"file":"03-promises.9302b280.js.map"}